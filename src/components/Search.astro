---
// Heavy inspiration taken from Astro Starlight -> https://github.com/withastro/starlight/blob/main/packages/starlight/components/Search.astro

import "@pagefind/default-ui/css/ui.css";
import { Icon } from "astro-icon/components";
---

<div id="search" class="search-container">
	<div class="search-input-container">
		<input 
			type="text" 
			id="search-input" 
			placeholder="Recherche disponible après déploiement" 
			class="w-full p-2 rounded-md border border-special-lighter bg-special-lightest focus:outline-none focus:ring-2 focus:ring-accent-base"
			disabled
		/>
	</div>
	<div id="search-results" class="search-results mt-4">
		<p>La recherche sera disponible une fois le site déployé.</p>
	</div>
</div>

<script is:inline>
	// Fonction qui sera appelée lorsque Pagefind sera disponible (après le build)
	document.addEventListener('DOMContentLoaded', function() {
		// On attend un peu que la page soit chargée complètement
		setTimeout(function() {
			const searchInput = document.getElementById('search-input');
			const searchResults = document.getElementById('search-results');
			
			if (!searchInput || !searchResults) return;

			// On vérifie si pagefind est disponible (après le build)
			if (window.location.pathname.includes('/recherche') && typeof window.pagefind !== 'undefined') {
				let debounceTimeout;
				
				searchInput.addEventListener('input', function(e) {
					clearTimeout(debounceTimeout);
					
					const query = e.target.value;
					
					if (!query || query.length < 3) {
						searchResults.innerHTML = '';
						return;
					}
					
					debounceTimeout = setTimeout(function() {
						// Utiliser l'API globale de pagefind qui sera disponible après le build
						window.pagefind.search(query).then(function(results) {
							if (!results.results || results.results.length === 0) {
								searchResults.innerHTML = '<p>Aucun résultat trouvé</p>';
								return;
							}
							
							const fragment = document.createDocumentFragment();
							let loadedCount = 0;
							
							results.results.forEach(function(result) {
								result.data().then(function(data) {
									const resultElement = document.createElement('div');
									resultElement.className = 'search-result p-3 rounded-md hover:bg-special-lighter mb-2';
									
									const titleElement = document.createElement('a');
									titleElement.href = data.url;
									titleElement.className = 'font-medium text-accent-two hover:underline';
									titleElement.textContent = data.meta.title;
									
									const excerptElement = document.createElement('p');
									excerptElement.className = 'text-sm mt-1';
									excerptElement.textContent = data.excerpt;
									
									resultElement.appendChild(titleElement);
									resultElement.appendChild(excerptElement);
									fragment.appendChild(resultElement);
									
									loadedCount++;
									
									if (loadedCount === results.results.length) {
										searchResults.innerHTML = '';
										searchResults.appendChild(fragment);
									}
								});
							});
						}).catch(function(error) {
							console.error('Erreur de recherche:', error);
							searchResults.innerHTML = '<p>Une erreur est survenue pendant la recherche</p>';
						});
					}, 300);
				});
			} else {
				searchInput.placeholder = "La recherche sera disponible après la construction du site";
				searchInput.disabled = true;
			}
		}, 1000);
	});
</script>

<style>
	.search-container {
		width: 100%;
		max-width: 600px;
		margin: 0 auto;
	}
	
	.search-results {
		max-height: 500px;
		overflow-y: auto;
		color: #888;
		font-style: italic;
		text-align: center;
	}
</style>